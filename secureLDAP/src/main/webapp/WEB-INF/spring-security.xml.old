<beans:beans 
    xmlns:ldap="http://www.springframework.org/schema/ldap"
    xmlns:s="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/security
	    http://www.springframework.org/schema/security/spring-security.xsd
	    http://www.springframework.org/schema/ldap
	    http://www.springframework.org/schema/ldap/spring-ldap.xsd
	    ">

   
 
    <!-- Spring Security -->
	<s:http auto-config="true" use-expressions="true">
	    <s:intercept-url pattern="/login/**" access="permitAll" />
	    <s:intercept-url pattern="/**" access="hasRole('ROLE_ADMINISTRATOR')" />
		<s:intercept-url pattern="/securite" access="hasRole('ROLE_ADMINISTRATOR')" />

		<s:form-login login-page="/login" 
		    username-parameter="login"
			password-parameter="password" />

		<s:logout logout-url="/logout" invalidate-session="true" />

	</s:http>
	
	<s:ldap-server url="ldap://localhost:10389/dc=example,dc=com"
		manager-dn="uid=admin,ou=system" manager-password="secret" />
	
	<!-- 
	<s:authentication-manager>
		<s:authentication-provider ref="customAuthenticationProvider">
		</s:authentication-provider>
	</s:authentication-manager> -->
	<!-- END - Spring Security -->
	
	
	

	<s:authentication-manager>
		<s:ldap-authentication-provider
		    user-search-filter="cn={0}"
		    user-search-base="ou=users" 
			group-search-filter="member={0}" 
			group-search-base="ou=groups"
			group-role-attribute="cn" 
			role-prefix="ROLE_" />
	</s:authentication-manager>

	<!--  

	<beans:bean id="contextSource"
		class="org.springframework.ldap.core.support.LdapContextSource">
		<beans:property name="url" value="ldap://localhost:10389" />
		<beans:property name="base" value="dc=example,dc=com" />
		<beans:property name="userDn" value="uid=admin,ou=system" />
		<beans:property name="password" value="secret" />
	</beans:bean>
	
	
	
	  

	<beans:bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
		<beans:constructor-arg ref="contextSource" />
	</beans:bean>
	
 -->
 	<!-- LDAP Context-Source -->
	<ldap:context-source
          	url="ldap://localhost:10389"
         	base="dc=example,dc=com"
          	username="uid=admin,ou=system"
          	password="secret"
          	
   	/>
	
	

	<!-- LDAP Template -->
	<ldap:ldap-template id="ldapTemplate" />
	
	<!-- Beans -->
	
	
	 <!--  
	<beans:bean id="customAuthenticationProvider"
		class="co.ntier.secureLDAP.config.SecurityConfig" />
		
		
		<beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <beans:constructor-arg value="ldap://localhost:10389/dc=example,dc=com"/>
    </beans:bean>


<beans:bean id="customAuthenticationProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
                <beans:constructor-arg ref="contextSource" />
                <beans:property name="userSearch">
                    <beans:bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
                      <beans:constructor-arg index="0" value="ou=users"/>
                      <beans:constructor-arg index="1" value="(cn={0})"/>
                      <beans:constructor-arg index="2" ref="contextSource" />
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </beans:constructor-arg>
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
                <beans:constructor-arg ref="contextSource" />
                <beans:constructor-arg value="ou=groups" />
                <beans:property name="groupSearchFilter" value="(member={0})"/>
                <beans:property name="rolePrefix" value="ROLE_"/>
                <beans:property name="searchSubtree" value="true"/>
                <beans:property name="convertToUpperCase" value="true"/>
            </beans:bean>
        </beans:constructor-arg>
</beans:bean>
-->

	
	<!-- End - Beans -->

</beans:beans>